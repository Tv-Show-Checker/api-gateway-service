services:
  kong-db:
    image: postgres
    restart: always
    hostname: kong-database
    container_name: kong-database
    environment:
      POSTGRES_USER: $KONG_PG_USER
      POSTGRES_DB: $KONG_PG_DATABASE
      POSTGRES_PASSWORD: $KONG_PG_PASSWORD
    ports:
      - '5440:5432'
    volumes:
      - kong-database:/var/lib/postgresql/data/
    
  kong-bootstrap:
    image: kong
    hostname: kong-bootstrap
    container_name: kong-bootstrap
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: $KONG_PG_HOST
      KONG_PG_DATABASE: $KONG_PG_DATABASE
      KONG_PG_USER: $KONG_PG_USER
      KONG_PG_PASSWORD: $KONG_PG_PASSWORD
    command: 'kong migrations bootstrap'
    restart: on-failure
  
  kong-config:
    image: kong
    hostname: kong-config
    container_name: kong-config
    depends_on:
      kong-bootstrap:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: $KONG_PG_HOST
      KONG_PG_DATABASE: $KONG_PG_DATABASE
      KONG_PG_USER: $KONG_PG_USER
      KONG_PG_PASSWORD: $KONG_PG_PASSWORD
    volumes:
      - ./kong.yml:/home/kong/kong.yml
    command: 'kong config db_import /home/kong/kong.yml'

  kong:
    image: kong
    restart: always
    hostname: kong
    container_name: kong
    depends_on:
      kong-bootstrap:
        condition: service_completed_successfully
    environment:
      KONG_DATABASE: 'postgres'
      KONG_PG_HOST: $KONG_PG_HOST
      KONG_PG_DATABASE: $KONG_PG_DATABASE
      KONG_PG_USER: $KONG_PG_USER
      KONG_PG_PASSWORD: $KONG_PG_PASSWORD
      KONG_PROXY_ACCESS_LOG: '/dev/stdout'
      KONG_ADMIN_ACCESS_LOG: '/dev/stdout'
      KONG_PROXY_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_LISTEN: $KONG_ADMIN_LISTEN
      KONG_NGINX_HTTP_CLIENT_HEADER_BUFFER_SIZE: '256k'
      KONG_NGINX_HTTP_LARGE_CLIENT_HEADER_BUFFERS: '4 32k'
    command: 'kong start'
    ports:
      - '9000:8000'
      - '8001:8001'
    networks:
      - default
      - external

networks:
  default:
    name: kong-net 

  external:
    # In production for registering services to Kong you will use real IP address of the server or domain name.
    # Note: If you microsirvice application works in the same server and runs in separate docker containers
    #       change external network name with yours
    name: django-advanced-net
    external: true
  
volumes:
  kong-database: